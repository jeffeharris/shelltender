# Development Dockerfile for Shelltender
FROM node:20

# Install build dependencies for node-pty and development tools
RUN apt-get update && apt-get install -y python3 make g++ git && rm -rf /var/lib/apt/lists/*

# Install AI coding assistant CLIs
RUN npm install -g \
    @anthropic-ai/claude-code \
    openai-cli \
    @google/gemini-cli

# Install common development tools these AIs typically use
RUN npm install -g \
    typescript \
    @types/node \
    eslint \
    prettier \
    jest \
    vitest

# Install Python tools
RUN apt-get update && apt-get install -y python3-pip && \
    rm -rf /var/lib/apt/lists/* && \
    pip3 install --break-system-packages \
    black \
    pylint \
    pytest \
    ruff

WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./
COPY packages/core/package*.json ./packages/core/
COPY packages/server/package*.json ./packages/server/
COPY packages/client/package*.json ./packages/client/
COPY packages/shelltender/package*.json ./packages/shelltender/
# Skip apps/demo as it doesn't exist in this version

# Install dependencies
RUN npm install

# Copy all source files
COPY . .

# Copy minimal-demo separately to ensure it's included
COPY minimal-demo ./minimal-demo

# Rebuild native modules to ensure they work in the container
RUN npm rebuild

# Build packages in dependency order
RUN npm run build -w @shelltender/core && \
    npm run build -w @shelltender/server && \
    npm run build -w @shelltender/client && \
    npm run build -w shelltender

# Copy the admin UI files into the build output
RUN cp -r packages/server/src/admin packages/server/dist/

# Create directory for sessions
RUN mkdir -p /app/sessions /app/ai-monitor-data

# In development, we'll run as root to avoid permission issues
# USER node

# Expose all development ports
EXPOSE 9090 5174

# Set development environment
ENV NODE_ENV=development
ENV PORT=8080
# Let other env vars come from .env file

# Start in the minimal-demo directory instead
WORKDIR /app/minimal-demo

# Run the server with admin UI
CMD ["node", "server-with-admin.js"]