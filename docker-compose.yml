# Development Docker Compose configuration
name: shelltender-dev

services:
  shelltender:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: shelltender-dev
    ports:
      - "${PORT:-8080}:8080"    # Single port for HTTP + WebSocket
      - "${VITE_PORT:-5173}:5173"    # Vite dev server (frontend)
    environment:
      - NODE_ENV=development
      - PORT=8080
      - SINGLE_PORT=${SINGLE_PORT:-true}
      - WS_PORT=${WS_PORT:-8081}  # Only used if SINGLE_PORT=false
      - VITE_WS_URL=${VITE_WS_URL:-}  # Auto-detected by client
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker
      # AI Assistant API Keys (loaded from .env file)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      # Optional: Google Cloud configuration
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT:-}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION:-}
      - GOOGLE_GENAI_USE_VERTEXAI=${GOOGLE_GENAI_USE_VERTEXAI:-}
    volumes:
      # Mount source code for hot reloading
      - ./packages:/app/packages:delegated
      - ./minimal-demo:/app/minimal-demo:delegated
      - ./scripts:/app/scripts:delegated
      
      # Exclude node_modules to avoid conflicts
      - /app/node_modules
      - /app/packages/core/node_modules
      - /app/packages/server/node_modules
      - /app/packages/client/node_modules
      - /app/packages/shelltender/node_modules
      
      # Persist session data
      - shelltender-sessions:/app/sessions
      
      # Persist bash history for convenience
      - shelltender-history:/root
    restart: unless-stopped
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shelltender-network

  # AI Monitor Service - monitors terminal sessions for AI tool patterns
  ai-monitor:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: shelltender-ai-monitor
    ports:
      - "3002:3001"    # AI Monitor API
    environment:
      - NODE_ENV=development
      - AI_MONITOR_HTTP_PORT=3001
      - SHELLTENDER_WS_HOST=shelltender  # Connect to main container
      - SHELLTENDER_WS_PORT=8080
      - AI_MONITOR_DATA_DIR=/app/ai-monitor-data
    volumes:
      # Mount source code for development
      - ./packages:/app/packages:delegated
      - ./apps:/app/apps:delegated
      
      # Exclude node_modules
      - /app/node_modules
      - /app/packages/core/node_modules
      - /app/packages/server/node_modules
      - /app/packages/client/node_modules
      - /app/apps/demo/node_modules
      
      # Persist AI monitor data
      - ai-monitor-data:/app/ai-monitor-data
    depends_on:
      - shelltender
    restart: unless-stopped
    networks:
      - shelltender-network
    working_dir: /app/apps/demo
    command: ["npx", "tsx", "src/server/ai-monitor-env.ts"]
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: PostgreSQL for future session persistence
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: shelltender
  #     POSTGRES_USER: shelltender
  #     POSTGRES_PASSWORD: shelltender
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - shelltender-network

networks:
  shelltender-network:
    driver: bridge

volumes:
  shelltender-sessions:
    driver: local
  shelltender-history:
    driver: local
  ai-monitor-data:
    driver: local
  # postgres-data:
  #   driver: local